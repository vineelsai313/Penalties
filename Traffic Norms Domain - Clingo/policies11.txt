%%% SPEED RESTRICTIONS

% AOPL:
% r1(L1, L2, S, S1): normally -permitted(drive(L1,L2,S)) if speed_limit(L1, L2, S1), lt(S1, 55), gt(S, S1+5)  
rule(r1(L1, L2, S, S1)) :- action(drive(L1,L2,S)),
                           speed(S1).
type(r1(L1, L2, S, S1), defeasible) :- rule(r1(L1, L2, S, S1)).
text(r1(L1, L2, S, S1), "The agent is not permitted to go over speed limit by more than 5mph if the speed limit is less than 55mph (Defeasible)")  :- rule(r1(L1, L2, S, S1)).
head(r1(L1, L2, S, S1), -permitted(drive(L1,L2,S))) :- rule(r1(L1, L2, S, S1)).
mbr(b(r1(L1, L2, S, S1)), speed_limit(L1, L2, S1)) :- rule(r1(L1, L2, S, S1)). 
mbr(b(r1(L1, L2, S, S1)), lt(S1, 55)) :- rule(r1(L1, L2, S, S1)). 
mbr(b(r1(L1, L2, S, S1)), gt(S, S1+5)) :- rule(r1(L1, L2, S, S1)).
penalty(r1(L1, L2, S, S1),1) :- rule(r1(L1, L2, S, S1)), S - S1 < 10.
penalty(r1(L1, L2, S, S1),2) :- rule(r1(L1, L2, S, S1)), S - S1 >= 10, S - S1 < 20.
penalty(r1(L1, L2, S, S1),3) :- rule(r1(L1, L2, S, S1)), S - S1 >= 20.

%%%% !!!
prefer(r1(L1, L2, S, S1), r7(L1, L2, S)) :- rule(r1(L1, L2, S, S1)), rule(r7(L1, L2, S)).
prefer(r1(L1, L2, S, S1), r8(L1, L2, S)) :- rule(r1(L1, L2, S, S1)), rule(r8(L1, L2, S)).


% AOPL:
% r2(L1, L2, S, S1): normally -permitted(drive(L1,L2,S)) if speed_limit(L1, L2, S1), gte(S1, 55), gt(S, S1+10)  
rule(r2(L1, L2, S, S1)) :- action(drive(L1,L2,S)),
                            speed(S1).
type(r2(L1, L2, S, S1), defeasible) :- rule(r2(L1, L2, S, S1)).
text(r2(L1, L2, S, S1), "The agent is not permitted to go over speed limit by more than 10mph if the speed limit is 55mph or more (Defeasible)") :- rule(r2(L1, L2, S, S1)).
head(r2(L1, L2, S, S1), -permitted(drive(L1,L2,S))) :- rule(r2(L1, L2, S, S1)).
mbr(b(r2(L1, L2, S, S1)), speed_limit(L1, L2, S1)) :- rule(r2(L1, L2, S, S1)).
mbr(b(r2(L1, L2, S, S1)), gte(S1, 55)) :- rule(r2(L1, L2, S, S1)).
mbr(b(r2(L1, L2, S, S1)), gt(S, S1+10)) :- rule(r2(L1, L2, S, S1)).
penalty(r2(L1, L2, S, S1),2) :- rule(r2(L1, L2, S, S1)), S - S1 >= 10, S - S1 < 20.
penalty(r2(L1, L2, S, S1),3) :- rule(r2(L1, L2, S, S1)), S - S1 >= 20.

%%%% !!!
prefer(r2(L1, L2, S, S1), r7(L1, L2, S)) :- rule(r2(L1, L2, S, S1)), rule(r7(L1, L2, S)).
prefer(r2(L1, L2, S, S1), r8(L1, L2, S)) :- rule(r2(L1, L2, S, S1)), rule(r8(L1, L2, S)).

%%% ------------------------------------

%%% DO NOT ENTER SIGN

% AOPL:	 
% r3(L1, L2, S): obl(-drive(L1,L2,S)) if is_sign(do_not_enter, L1, L2)
rule(r3(L1, L2, S)) :- action(drive(L1,L2,S)).
type(r3(L1, L2, S), strict) :- rule(r3(L1, L2, S)).
text(r3(L1, L2, S), "The agent is obligated not to enter a do not enter road (Strict)"):- rule(r3(L1, L2, S)).
head(r3(L1, L2, S), obl(-drive(L1,L2,S))) :- rule(r3(L1, L2, S)).
mbr(b(r3(L1, L2, S)), is_sign(do_not_enter, L1, L2)) :- rule(r3(L1, L2, S)).
penalty(r3(L1, L2, S), 3) :- rule(r3(L1, L2, S)).

%%% ------------------------------------

%%% STOP SIGN

% AOPL:
% r4(L1, L2, S): -permitted(drive(L1, L2, S)) if is_sign(stop, L1, L2), -has_speed(0).
% Physically, the stop sign will be located at L1, but it prevents driving without stopping from L1 to L2.
rule(r4(L1, L2, S)) :- action(drive(L1, L2, S)).
type(r4(L1, L2, S), strict) :- rule(r4(L1, L2, S)).
text(r4(L1, L2, S), "The agent is not permitted to roll over a stop sign (Strict)") :- rule(r4(L1, L2, S)).
head(r4(L1, L2, S), -permitted(drive(L1,L2,S))) :- rule(r4(L1, L2, S)).
mbr(b(r4(L1, L2, S)), is_sign(stop, L1, L2)) :- rule(r4(L1, L2, S)).
mbr(b(r4(L1, L2, S)), -has_speed(0)) :- rule(r4(L1, L2, S)).
penalty(r4(L1, L2, S), 2) :- rule(r4(L1, L2, S)).

%%% ------------------------------------

%%% SCHOOL BUS (defined fluent)

% AOPL:
% r5(): obl(-drive(L1, L2, S)) if school_bus_is_stopped(L1, L2).
rule(r5(L1, L2, S)) :- action(drive(L1, L2, S)).
type(r5(L1, L2, S), strict) :- rule(r5(L1, L2, S)).
text(r5(L1, L2, S), "The agent is obligated not to move when a school bus is stopped (Strict)"):- rule(r5(L1, L2, S)).
head(r5(L1, L2, S), obl(-drive(L1, L2, S))) :- rule(r5(L1, L2, S)).
mbr(b(r5(L1, L2, S)), school_bus_is_stopped(L1, L2)) :- rule(r5(L1, L2, S)).
penalty(r5(L1, L2, S), 50) :- rule(r5(L1, L2, S)).


% r51(): obl(-drive(L1, L2, S)) if school_bus_is_stopped(L2, L1).
rule(r51(L1, L2, S)) :- action(drive(L1, L2, S)).
type(r51(L1, L2, S), strict) :- rule(r51(L1, L2, S)).
text(r51(L1, L2, S), "The agent is obligated not to move when a school bus is stopped (Strict)"):- rule(r51(L1, L2, S)).
head(r51(L1, L2, S), obl(-drive(L1, L2, S))) :- rule(r51(L1, L2, S)).
mbr(b(r51(L1, L2, S)), school_bus_is_stopped(L2, L1)) :- rule(r51(L1, L2, S)).
penalty(r51(L1, L2, S), 50) :- rule(r51(L1, L2, S)).

%%% ------------------------------------

%%% THERE ARE PEDESTRIANS (defined fluent)

% AOPL: 
% r6(L): obl(stop(L)) if at_loc(L), pedestrians_are_crossing(L)
% penalty(r6(L), 50)
rule(r6(L)) :- action(stop(L)).
type(r6(L), strict) :- rule(r6(L)).
head(r6(L), obl(stop(L))) :- rule(r6(L)).
mbr(b(r6(L)), at_loc(L)) :- rule(r6(L)).
mbr(b(r6(L)), pedestrians_are_crossing(L)) :- rule(r6(L)).
penalty(r6(L), 50) :- rule(r6(L)).  


%%% ------------------------------------

%%% LIGHT COLOR (defined fluent)

% AOPL:
% r7(L1, L2, S): normally permitted(drive(L1, L2, S)) if light_color(green, L1, L2).
rule(r7(L1, L2, S)) :- action(drive(L1, L2, S)).
type(r7(L1, L2, S), defeasible) :- rule(r7(L1, L2, S)).
text(r7(L1, L2, S), "The agent is permitted to cross an intersection if the light is green (Defeasible)") :- rule(r7(L1, L2, S)).
head(r7(L1, L2, S), permitted(drive(L1,L2,S))) :- rule(r7(L1, L2, S)).
mbr(b(r7(L1, L2, S)), light_color(green, L1, L2)) :- rule(r7(L1, L2, S)).

% AOPL:
% NOTE: Change to permitted to drive
% r8(L1, L2, S): normally permitted(drive(L1, L2, S)) if light_color(yellow, L1, L2)
rule(r8(L1, L2, S)) :- action(drive(L1, L2, S)).
type(r8(L1, L2, S), defeasible) :- rule(r8(L1, L2, S)).
text(r8(L1, L2, S), "The agent is permitted to drive if the light is yellow (Defeasible)") :- rule(r8(L1, L2, S)).
head(r8(L1, L2, S), permitted(drive(L1, L2, S))) :- rule(r8(L1, L2, S)).
mbr(b(r8(L1, L2, S)), light_color(yellow, L1, L2)) :- rule(r8(L1, L2, S)).

% AOPL:
% r9(L1, L2, S): obl(-drive(L1,L2,S)) if light_color(red, L1, L2)  
rule(r9(L1, L2, S)) :- action(drive(L1, L2, S)).
type(r9(L1, L2, S), strict) :- rule(r9(L1, L2, S)).
text(r9(L1, L2, S), "The agent is obligated not to cross an intersection on a red light (Strict)") :- rule(r9(L1, L2, S)).
head(r9(L1, L2, S), obl(-drive(L1,L2,S))) :- rule(r9(L1, L2, S)).
mbr(b(r9(L1, L2, S)), light_color(red, L1, L2)) :- rule(r9(L1, L2, S)).
penalty(r9(L1, L2, S), 3) :- rule(r9(L1, L2, S)).

